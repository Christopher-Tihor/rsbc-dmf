syntax = "proto3";

import "google/protobuf/timestamp.proto";

option csharp_namespace = "Rsbc.Dmf.CaseManagement.Service";

package CaseManagement;

service CaseManager {
  rpc Search (SearchRequest) returns (SearchReply);

  // Get a token given a secret.
  rpc GetToken (TokenRequest) returns (TokenReply);

  // Fetch a specific case
  rpc GetCase (GetCaseRequest) returns (GetCaseReply);

  // Update a Case
  rpc UpdateCase(UpdateCaseRequest) returns (UpdateCaseReply);

  // Get all the flags
  rpc GetAllFlags(GetAllFlagsRequest) returns (GetAllFlagsReply);
}

message SearchRequest {
  string caseId = 1;
  string title = 2;
  string clinicId = 3;
  string driverLicenseNumber = 4;
  repeated string statuses = 5;
}

message SearchReply {
  repeated DmerCase items = 1;
}

message GetAllFlagsRequest {	
}

message GetAllFlagsReply {
	repeated FlagItem Flags = 1;
}

message GetCaseRequest {
	string caseId = 1;
}

message GetCaseReply {
	ResultStatus resultStatus = 1;
	DmerCase case = 2;
	string errorDetail = 3;
}

message DmerCase {
	string caseId = 1;
	string createdBy = 2;
	google.protobuf.Timestamp createdOn = 3;
	string modifiedBy = 4;
	google.protobuf.Timestamp modifiedOn = 5;
	bool isCommercial = 6;
	string title = 7;
	string driverName = 10;
	string driverLicenseNumber = 11;
	string clinicId = 12;
	string clinicName = 13;

	repeated FlagItem Flags = 30;
}

enum ResultStatus {
	Fail = 0;
	Success = 1;
}

message TokenRequest {
	string secret = 1;
}

message TokenReply {
	ResultStatus resultStatus = 1;
	string token = 2;
	string errorDetail = 3;
}

message UpdateCaseRequest{
	string caseId = 1;
	bool isCleanPass = 2;
	repeated FlagItem flags = 3;
	string pdfFileKey = 4;
	string dataFileKey = 5;
}

message UpdateCaseReply{	
	ResultStatus resultStatus = 1;
	string errorDetail = 2;
}

message FlagItem {
	string identifier = 1;
	string question = 2;
	bool result = 3;
	enum FlagTypeOptions {
		Unknown = 0;
		Submittal = 1;
		Review = 2;
		FollowUp = 3;
		Message = 4;
	}
	FlagTypeOptions flagType = 4;
}



