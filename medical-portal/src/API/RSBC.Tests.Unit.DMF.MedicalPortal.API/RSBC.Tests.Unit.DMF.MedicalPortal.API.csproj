<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" Version="8.0.4" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.9.0" />
    <PackageReference Include="xunit" Version="2.6.6" />
    <PackageReference Include="Xunit.DependencyInjection" Version="8.9.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.5.6">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="3.1.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\..\cms-adapter\src\Rsbc.Dmf.CaseManagement.Moq\Rsbc.Dmf.CaseManagement.Moq.csproj" />
    <ProjectReference Include="..\..\..\..\document-storage-adapter\src\Pssg.DocumentStorageAdapter.Moq\Pssg.DocumentStorageAdapter.Moq.csproj" />

    <ProjectReference Include="..\RSBC.DMF.MedicalPortal.API\RSBC.DMF.MedicalPortal.API.csproj" />

	
  </ItemGroup>

  <!-- NOTE this shouldn't be needed, it could just be a local compilation issue. This will force XUnit DI to use the Startup for DI wire-up -->
  <PropertyGroup>
    <XunitStartupAssembly>RSBC.Tests.Unit.DMF.MedicalPortal.API</XunitStartupAssembly>
    <XunitStartupFullName>Startup</XunitStartupFullName>
    <UserSecretsId>1ffce3a4-c5cd-41a1-ac51-9b50f8b722f9</UserSecretsId>
  </PropertyGroup>

</Project>
