// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cmsAdapter.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Rsbc.Dmf.CaseManagement.Service {
  public static partial class CaseManager
  {
    static readonly string __ServiceName = "CaseManagement.CaseManager";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.BringForwardRequest> __Marshaller_CaseManagement_BringForwardRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.BringForwardRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Marshaller_CaseManagement_ResultStatusReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.LegacyComment> __Marshaller_CaseManagement_LegacyComment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.LegacyComment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply> __Marshaller_CaseManagement_CreateStatusReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.LegacyDocument> __Marshaller_CaseManagement_LegacyDocument = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.LegacyDocument.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest> __Marshaller_CaseManagement_LegacyDocumentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest> __Marshaller_CaseManagement_CommentIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest> __Marshaller_CaseManagement_DriverLicenseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> __Marshaller_CaseManagement_GetCommentsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest> __Marshaller_CaseManagement_EmptyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.GetAllFlagsReply> __Marshaller_CaseManagement_GetAllFlagsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.GetAllFlagsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.GetCommentReply> __Marshaller_CaseManagement_GetCommentReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.GetCommentReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest> __Marshaller_CaseManagement_CaseIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply> __Marshaller_CaseManagement_GetDocumentsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply> __Marshaller_CaseManagement_GetDriversReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.GetLegacyDocumentReply> __Marshaller_CaseManagement_GetLegacyDocumentReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.GetLegacyDocumentReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.TokenRequest> __Marshaller_CaseManagement_TokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.TokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.TokenReply> __Marshaller_CaseManagement_TokenReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.TokenReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.SearchReply> __Marshaller_CaseManagement_SearchReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.SearchReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.IdListRequest> __Marshaller_CaseManagement_IdListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.IdListRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.IcbcErrorRequest> __Marshaller_CaseManagement_IcbcErrorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.IcbcErrorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateRequest> __Marshaller_CaseManagement_LegacyCandidateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateReply> __Marshaller_CaseManagement_LegacyCandidateReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.SearchRequest> __Marshaller_CaseManagement_SearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.SearchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicRequest> __Marshaller_CaseManagement_SetCasePractitionerClinicRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicReply> __Marshaller_CaseManagement_SetCasePractitionerClinicReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseRequest> __Marshaller_CaseManagement_UpdateCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseReply> __Marshaller_CaseManagement_UpdateCaseReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.UpdateDriverRequest> __Marshaller_CaseManagement_UpdateDriverRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.UpdateDriverRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.BringForwardRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Method_CreateBringForward = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.BringForwardRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBringForward",
        __Marshaller_CaseManagement_BringForwardRequest,
        __Marshaller_CaseManagement_ResultStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyComment, global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply> __Method_CreateLegacyCaseComment = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyComment, global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateLegacyCaseComment",
        __Marshaller_CaseManagement_LegacyComment,
        __Marshaller_CaseManagement_CreateStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyDocument, global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply> __Method_CreateLegacyCaseDocument = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyDocument, global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateLegacyCaseDocument",
        __Marshaller_CaseManagement_LegacyDocument,
        __Marshaller_CaseManagement_CreateStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Method_DeleteLegacyCaseDocument = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteLegacyCaseDocument",
        __Marshaller_CaseManagement_LegacyDocumentRequest,
        __Marshaller_CaseManagement_ResultStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Method_DeleteComment = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteComment",
        __Marshaller_CaseManagement_CommentIdRequest,
        __Marshaller_CaseManagement_ResultStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest, global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> __Method_GetAllDriverComments = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest, global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllDriverComments",
        __Marshaller_CaseManagement_DriverLicenseRequest,
        __Marshaller_CaseManagement_GetCommentsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest, global::Rsbc.Dmf.CaseManagement.Service.GetAllFlagsReply> __Method_GetAllFlags = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest, global::Rsbc.Dmf.CaseManagement.Service.GetAllFlagsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllFlags",
        __Marshaller_CaseManagement_EmptyRequest,
        __Marshaller_CaseManagement_GetAllFlagsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest, global::Rsbc.Dmf.CaseManagement.Service.GetCommentReply> __Method_GetComment = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest, global::Rsbc.Dmf.CaseManagement.Service.GetCommentReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetComment",
        __Marshaller_CaseManagement_CommentIdRequest,
        __Marshaller_CaseManagement_GetCommentReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest, global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> __Method_GetCaseComments = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest, global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCaseComments",
        __Marshaller_CaseManagement_CaseIdRequest,
        __Marshaller_CaseManagement_GetCommentsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest, global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply> __Method_GetCaseDocuments = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest, global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCaseDocuments",
        __Marshaller_CaseManagement_CaseIdRequest,
        __Marshaller_CaseManagement_GetDocumentsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest, global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> __Method_GetDriverComments = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest, global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDriverComments",
        __Marshaller_CaseManagement_DriverLicenseRequest,
        __Marshaller_CaseManagement_GetCommentsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest, global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply> __Method_GetDriverDocuments = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest, global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDriverDocuments",
        __Marshaller_CaseManagement_DriverLicenseRequest,
        __Marshaller_CaseManagement_GetDocumentsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest, global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply> __Method_GetDrivers = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest, global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDrivers",
        __Marshaller_CaseManagement_EmptyRequest,
        __Marshaller_CaseManagement_GetDriversReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest, global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply> __Method_GetDriver = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest, global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDriver",
        __Marshaller_CaseManagement_DriverLicenseRequest,
        __Marshaller_CaseManagement_GetDriversReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest, global::Rsbc.Dmf.CaseManagement.Service.GetLegacyDocumentReply> __Method_GetLegacyDocument = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest, global::Rsbc.Dmf.CaseManagement.Service.GetLegacyDocumentReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLegacyDocument",
        __Marshaller_CaseManagement_LegacyDocumentRequest,
        __Marshaller_CaseManagement_GetLegacyDocumentReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.TokenRequest, global::Rsbc.Dmf.CaseManagement.Service.TokenReply> __Method_GetToken = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.TokenRequest, global::Rsbc.Dmf.CaseManagement.Service.TokenReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetToken",
        __Marshaller_CaseManagement_TokenRequest,
        __Marshaller_CaseManagement_TokenReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest, global::Rsbc.Dmf.CaseManagement.Service.SearchReply> __Method_GetUnsentMedicalUpdates = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest, global::Rsbc.Dmf.CaseManagement.Service.SearchReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUnsentMedicalUpdates",
        __Marshaller_CaseManagement_EmptyRequest,
        __Marshaller_CaseManagement_SearchReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.IdListRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Method_MarkMedicalUpdatesSent = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.IdListRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MarkMedicalUpdatesSent",
        __Marshaller_CaseManagement_IdListRequest,
        __Marshaller_CaseManagement_ResultStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.IcbcErrorRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Method_MarkMedicalUpdateError = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.IcbcErrorRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MarkMedicalUpdateError",
        __Marshaller_CaseManagement_IcbcErrorRequest,
        __Marshaller_CaseManagement_ResultStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateRequest, global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateReply> __Method_ProcessLegacyCandidate = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateRequest, global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ProcessLegacyCandidate",
        __Marshaller_CaseManagement_LegacyCandidateRequest,
        __Marshaller_CaseManagement_LegacyCandidateReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.SearchRequest, global::Rsbc.Dmf.CaseManagement.Service.SearchReply> __Method_Search = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.SearchRequest, global::Rsbc.Dmf.CaseManagement.Service.SearchReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Search",
        __Marshaller_CaseManagement_SearchRequest,
        __Marshaller_CaseManagement_SearchReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicRequest, global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicReply> __Method_SetCasePractitionerClinic = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicRequest, global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCasePractitionerClinic",
        __Marshaller_CaseManagement_SetCasePractitionerClinicRequest,
        __Marshaller_CaseManagement_SetCasePractitionerClinicReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseRequest, global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseReply> __Method_UpdateCase = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseRequest, global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCase",
        __Marshaller_CaseManagement_UpdateCaseRequest,
        __Marshaller_CaseManagement_UpdateCaseReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Method_ResolveCaseStatusUpdates = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResolveCaseStatusUpdates",
        __Marshaller_CaseManagement_EmptyRequest,
        __Marshaller_CaseManagement_ResultStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UpdateDriverRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Method_UpdateBirthDate = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UpdateDriverRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBirthDate",
        __Marshaller_CaseManagement_UpdateDriverRequest,
        __Marshaller_CaseManagement_ResultStatusReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Rsbc.Dmf.CaseManagement.Service.CmsAdapterReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for CaseManager</summary>
    public partial class CaseManagerClient : grpc::ClientBase<CaseManagerClient>
    {
      /// <summary>Creates a new client for CaseManager</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CaseManagerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CaseManager that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CaseManagerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CaseManagerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CaseManagerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply CreateBringForward(global::Rsbc.Dmf.CaseManagement.Service.BringForwardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBringForward(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply CreateBringForward(global::Rsbc.Dmf.CaseManagement.Service.BringForwardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBringForward, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> CreateBringForwardAsync(global::Rsbc.Dmf.CaseManagement.Service.BringForwardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBringForwardAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> CreateBringForwardAsync(global::Rsbc.Dmf.CaseManagement.Service.BringForwardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBringForward, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply CreateLegacyCaseComment(global::Rsbc.Dmf.CaseManagement.Service.LegacyComment request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLegacyCaseComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply CreateLegacyCaseComment(global::Rsbc.Dmf.CaseManagement.Service.LegacyComment request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateLegacyCaseComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply> CreateLegacyCaseCommentAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyComment request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLegacyCaseCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply> CreateLegacyCaseCommentAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyComment request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateLegacyCaseComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply CreateLegacyCaseDocument(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocument request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLegacyCaseDocument(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply CreateLegacyCaseDocument(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocument request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateLegacyCaseDocument, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply> CreateLegacyCaseDocumentAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocument request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLegacyCaseDocumentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.CreateStatusReply> CreateLegacyCaseDocumentAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocument request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateLegacyCaseDocument, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply DeleteLegacyCaseDocument(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLegacyCaseDocument(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply DeleteLegacyCaseDocument(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteLegacyCaseDocument, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> DeleteLegacyCaseDocumentAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLegacyCaseDocumentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> DeleteLegacyCaseDocumentAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteLegacyCaseDocument, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply DeleteComment(global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply DeleteComment(global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> DeleteCommentAsync(global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> DeleteCommentAsync(global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply GetAllDriverComments(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDriverComments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply GetAllDriverComments(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllDriverComments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> GetAllDriverCommentsAsync(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllDriverCommentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> GetAllDriverCommentsAsync(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllDriverComments, null, options, request);
      }
      /// <summary>
      /// Get all the flags
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetAllFlagsReply GetAllFlags(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllFlags(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get all the flags
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetAllFlagsReply GetAllFlags(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllFlags, null, options, request);
      }
      /// <summary>
      /// Get all the flags
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetAllFlagsReply> GetAllFlagsAsync(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllFlagsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get all the flags
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetAllFlagsReply> GetAllFlagsAsync(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllFlags, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetCommentReply GetComment(global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetCommentReply GetComment(global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetCommentReply> GetCommentAsync(global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetCommentReply> GetCommentAsync(global::Rsbc.Dmf.CaseManagement.Service.CommentIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetComment, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply GetCaseComments(global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCaseComments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply GetCaseComments(global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCaseComments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> GetCaseCommentsAsync(global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCaseCommentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> GetCaseCommentsAsync(global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCaseComments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply GetCaseDocuments(global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCaseDocuments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply GetCaseDocuments(global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCaseDocuments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply> GetCaseDocumentsAsync(global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCaseDocumentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply> GetCaseDocumentsAsync(global::Rsbc.Dmf.CaseManagement.Service.CaseIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCaseDocuments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply GetDriverComments(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDriverComments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply GetDriverComments(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDriverComments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> GetDriverCommentsAsync(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDriverCommentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetCommentsReply> GetDriverCommentsAsync(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDriverComments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply GetDriverDocuments(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDriverDocuments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply GetDriverDocuments(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDriverDocuments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply> GetDriverDocumentsAsync(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDriverDocumentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetDocumentsReply> GetDriverDocumentsAsync(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDriverDocuments, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply GetDrivers(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDrivers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply GetDrivers(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDrivers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply> GetDriversAsync(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDriversAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply> GetDriversAsync(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDrivers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply GetDriver(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDriver(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply GetDriver(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDriver, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply> GetDriverAsync(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDriverAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetDriversReply> GetDriverAsync(global::Rsbc.Dmf.CaseManagement.Service.DriverLicenseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDriver, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetLegacyDocumentReply GetLegacyDocument(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLegacyDocument(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.GetLegacyDocumentReply GetLegacyDocument(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLegacyDocument, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetLegacyDocumentReply> GetLegacyDocumentAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLegacyDocumentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.GetLegacyDocumentReply> GetLegacyDocumentAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyDocumentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLegacyDocument, null, options, request);
      }
      /// <summary>
      /// Get a token given a secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.TokenReply GetToken(global::Rsbc.Dmf.CaseManagement.Service.TokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a token given a secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.TokenReply GetToken(global::Rsbc.Dmf.CaseManagement.Service.TokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetToken, null, options, request);
      }
      /// <summary>
      /// Get a token given a secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.TokenReply> GetTokenAsync(global::Rsbc.Dmf.CaseManagement.Service.TokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a token given a secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.TokenReply> GetTokenAsync(global::Rsbc.Dmf.CaseManagement.Service.TokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetToken, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.SearchReply GetUnsentMedicalUpdates(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUnsentMedicalUpdates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.SearchReply GetUnsentMedicalUpdates(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUnsentMedicalUpdates, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.SearchReply> GetUnsentMedicalUpdatesAsync(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUnsentMedicalUpdatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.SearchReply> GetUnsentMedicalUpdatesAsync(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUnsentMedicalUpdates, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply MarkMedicalUpdatesSent(global::Rsbc.Dmf.CaseManagement.Service.IdListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkMedicalUpdatesSent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply MarkMedicalUpdatesSent(global::Rsbc.Dmf.CaseManagement.Service.IdListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MarkMedicalUpdatesSent, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> MarkMedicalUpdatesSentAsync(global::Rsbc.Dmf.CaseManagement.Service.IdListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkMedicalUpdatesSentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> MarkMedicalUpdatesSentAsync(global::Rsbc.Dmf.CaseManagement.Service.IdListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MarkMedicalUpdatesSent, null, options, request);
      }
      /// <summary>
      /// Logs error when the icbc update fails
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply MarkMedicalUpdateError(global::Rsbc.Dmf.CaseManagement.Service.IcbcErrorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkMedicalUpdateError(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Logs error when the icbc update fails
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply MarkMedicalUpdateError(global::Rsbc.Dmf.CaseManagement.Service.IcbcErrorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MarkMedicalUpdateError, null, options, request);
      }
      /// <summary>
      /// Logs error when the icbc update fails
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> MarkMedicalUpdateErrorAsync(global::Rsbc.Dmf.CaseManagement.Service.IcbcErrorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MarkMedicalUpdateErrorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Logs error when the icbc update fails
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> MarkMedicalUpdateErrorAsync(global::Rsbc.Dmf.CaseManagement.Service.IcbcErrorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MarkMedicalUpdateError, null, options, request);
      }
      /// <summary>
      /// process a line item from the legacy candidate list
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateReply ProcessLegacyCandidate(global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProcessLegacyCandidate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// process a line item from the legacy candidate list
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateReply ProcessLegacyCandidate(global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ProcessLegacyCandidate, null, options, request);
      }
      /// <summary>
      /// process a line item from the legacy candidate list
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateReply> ProcessLegacyCandidateAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProcessLegacyCandidateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// process a line item from the legacy candidate list
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateReply> ProcessLegacyCandidateAsync(global::Rsbc.Dmf.CaseManagement.Service.LegacyCandidateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ProcessLegacyCandidate, null, options, request);
      }
      /// <summary>
      /// Seach cases. Can also return a specific case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.SearchReply Search(global::Rsbc.Dmf.CaseManagement.Service.SearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Search(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Seach cases. Can also return a specific case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.SearchReply Search(global::Rsbc.Dmf.CaseManagement.Service.SearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Search, null, options, request);
      }
      /// <summary>
      /// Seach cases. Can also return a specific case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.SearchReply> SearchAsync(global::Rsbc.Dmf.CaseManagement.Service.SearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Seach cases. Can also return a specific case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.SearchReply> SearchAsync(global::Rsbc.Dmf.CaseManagement.Service.SearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Search, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicReply SetCasePractitionerClinic(global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCasePractitionerClinic(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicReply SetCasePractitionerClinic(global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCasePractitionerClinic, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicReply> SetCasePractitionerClinicAsync(global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCasePractitionerClinicAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicReply> SetCasePractitionerClinicAsync(global::Rsbc.Dmf.CaseManagement.Service.SetCasePractitionerClinicRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCasePractitionerClinic, null, options, request);
      }
      /// <summary>
      /// Update a Case
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseReply UpdateCase(global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a Case
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseReply UpdateCase(global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCase, null, options, request);
      }
      /// <summary>
      /// Update a Case
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseReply> UpdateCaseAsync(global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a Case
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseReply> UpdateCaseAsync(global::Rsbc.Dmf.CaseManagement.Service.UpdateCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCase, null, options, request);
      }
      /// <summary>
      /// Resolve a case
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply ResolveCaseStatusUpdates(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResolveCaseStatusUpdates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resolve a case
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply ResolveCaseStatusUpdates(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResolveCaseStatusUpdates, null, options, request);
      }
      /// <summary>
      /// Resolve a case
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> ResolveCaseStatusUpdatesAsync(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResolveCaseStatusUpdatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resolve a case
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> ResolveCaseStatusUpdatesAsync(global::Rsbc.Dmf.CaseManagement.Service.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResolveCaseStatusUpdates, null, options, request);
      }
      /// <summary>
      /// Update Birth Date
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply UpdateBirthDate(global::Rsbc.Dmf.CaseManagement.Service.UpdateDriverRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBirthDate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Birth Date
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply UpdateBirthDate(global::Rsbc.Dmf.CaseManagement.Service.UpdateDriverRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBirthDate, null, options, request);
      }
      /// <summary>
      /// Update Birth Date
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> UpdateBirthDateAsync(global::Rsbc.Dmf.CaseManagement.Service.UpdateDriverRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBirthDateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Birth Date
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> UpdateBirthDateAsync(global::Rsbc.Dmf.CaseManagement.Service.UpdateDriverRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBirthDate, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CaseManagerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CaseManagerClient(configuration);
      }
    }

  }
  public static partial class UserManager
  {
    static readonly string __ServiceName = "CaseManagement.UserManager";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.UsersSearchRequest> __Marshaller_CaseManagement_UsersSearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.UsersSearchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.UsersSearchReply> __Marshaller_CaseManagement_UsersSearchReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.UsersSearchReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.UserLoginRequest> __Marshaller_CaseManagement_UserLoginRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.UserLoginRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.UserLoginReply> __Marshaller_CaseManagement_UserLoginReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.UserLoginReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.UserSetEmailRequest> __Marshaller_CaseManagement_UserSetEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.UserSetEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Marshaller_CaseManagement_ResultStatusReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactRequest> __Marshaller_CaseManagement_PractitionerContactRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactReply> __Marshaller_CaseManagement_PractitionerContactReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.PractitionerRequest> __Marshaller_CaseManagement_PractitionerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.PractitionerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Rsbc.Dmf.CaseManagement.Service.PractitionerReply> __Marshaller_CaseManagement_PractitionerReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Rsbc.Dmf.CaseManagement.Service.PractitionerReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UsersSearchRequest, global::Rsbc.Dmf.CaseManagement.Service.UsersSearchReply> __Method_Search = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UsersSearchRequest, global::Rsbc.Dmf.CaseManagement.Service.UsersSearchReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Search",
        __Marshaller_CaseManagement_UsersSearchRequest,
        __Marshaller_CaseManagement_UsersSearchReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UserLoginRequest, global::Rsbc.Dmf.CaseManagement.Service.UserLoginReply> __Method_Login = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UserLoginRequest, global::Rsbc.Dmf.CaseManagement.Service.UserLoginReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_CaseManagement_UserLoginRequest,
        __Marshaller_CaseManagement_UserLoginReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UserSetEmailRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> __Method_SetEmail = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.UserSetEmailRequest, global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetEmail",
        __Marshaller_CaseManagement_UserSetEmailRequest,
        __Marshaller_CaseManagement_ResultStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactRequest, global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactReply> __Method_CreatePractitionerContact = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactRequest, global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePractitionerContact",
        __Marshaller_CaseManagement_PractitionerContactRequest,
        __Marshaller_CaseManagement_PractitionerContactReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.PractitionerRequest, global::Rsbc.Dmf.CaseManagement.Service.PractitionerReply> __Method_GetPractitionerContact = new grpc::Method<global::Rsbc.Dmf.CaseManagement.Service.PractitionerRequest, global::Rsbc.Dmf.CaseManagement.Service.PractitionerReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPractitionerContact",
        __Marshaller_CaseManagement_PractitionerRequest,
        __Marshaller_CaseManagement_PractitionerReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Rsbc.Dmf.CaseManagement.Service.CmsAdapterReflection.Descriptor.Services[1]; }
    }

    /// <summary>Client for UserManager</summary>
    public partial class UserManagerClient : grpc::ClientBase<UserManagerClient>
    {
      /// <summary>Creates a new client for UserManager</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UserManagerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserManager that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UserManagerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UserManagerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UserManagerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.UsersSearchReply Search(global::Rsbc.Dmf.CaseManagement.Service.UsersSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Search(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.UsersSearchReply Search(global::Rsbc.Dmf.CaseManagement.Service.UsersSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Search, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.UsersSearchReply> SearchAsync(global::Rsbc.Dmf.CaseManagement.Service.UsersSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.UsersSearchReply> SearchAsync(global::Rsbc.Dmf.CaseManagement.Service.UsersSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Search, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.UserLoginReply Login(global::Rsbc.Dmf.CaseManagement.Service.UserLoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.UserLoginReply Login(global::Rsbc.Dmf.CaseManagement.Service.UserLoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.UserLoginReply> LoginAsync(global::Rsbc.Dmf.CaseManagement.Service.UserLoginRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.UserLoginReply> LoginAsync(global::Rsbc.Dmf.CaseManagement.Service.UserLoginRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply SetEmail(global::Rsbc.Dmf.CaseManagement.Service.UserSetEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply SetEmail(global::Rsbc.Dmf.CaseManagement.Service.UserSetEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> SetEmailAsync(global::Rsbc.Dmf.CaseManagement.Service.UserSetEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.ResultStatusReply> SetEmailAsync(global::Rsbc.Dmf.CaseManagement.Service.UserSetEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactReply CreatePractitionerContact(global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePractitionerContact(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactReply CreatePractitionerContact(global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePractitionerContact, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactReply> CreatePractitionerContactAsync(global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePractitionerContactAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactReply> CreatePractitionerContactAsync(global::Rsbc.Dmf.CaseManagement.Service.PractitionerContactRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePractitionerContact, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.PractitionerReply GetPractitionerContact(global::Rsbc.Dmf.CaseManagement.Service.PractitionerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPractitionerContact(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Rsbc.Dmf.CaseManagement.Service.PractitionerReply GetPractitionerContact(global::Rsbc.Dmf.CaseManagement.Service.PractitionerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPractitionerContact, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.PractitionerReply> GetPractitionerContactAsync(global::Rsbc.Dmf.CaseManagement.Service.PractitionerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPractitionerContactAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Rsbc.Dmf.CaseManagement.Service.PractitionerReply> GetPractitionerContactAsync(global::Rsbc.Dmf.CaseManagement.Service.PractitionerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPractitionerContact, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override UserManagerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserManagerClient(configuration);
      }
    }

  }
}
#endregion
